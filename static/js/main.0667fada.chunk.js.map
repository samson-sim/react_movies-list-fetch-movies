{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","status","Error","json","FindMovie","addMovie","useState","isMovieValid","setIsMovieValid","findedMovieTitle","setFindedMovieTitle","findedMovie","setFindedMovie","loadMovie","a","toLowerCase","includes","Response","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","addMovieToList","every","movi","current","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,6BCLd,SAASC,EAASC,GACvB,OAAOC,MAAM,GAAD,OAXE,+CAWF,OAAcD,IACvBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,OACZ,MAAM,IAAIC,MAAM,SAGlB,OAAOF,EAASG,UCRf,IAAMC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgDF,mBAAS,IAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAsCJ,mBAAS,CAC7ClB,OAAQ,GACRE,MAAO,IACPC,KAAM,GACNI,OAAQ,KAJV,mBAAOgB,EAAP,KAAoBC,EAApB,KAOMC,EAAS,uCAAG,WAAOhB,GAAP,eAAAiB,EAAA,0DACVH,EAAYrB,OAAS,IAAIyB,cAAcC,SAASnB,EAAMkB,eAD5C,gCAEMnB,EAASC,GAFf,OAIS,WAFjBZ,EAFQ,QAIJgC,SACRT,GAAgB,GAEhBI,EAAe3B,GAPH,2CAAH,sDAYf,OACE,qCACE,uBAAMC,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBAAOA,UAAU,QAAQgC,QAAQ,cAAjC,wBAEE,qBAAKhC,UAAU,UAAf,SACE,uBACEiC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZnC,UAAU,kBACVoC,MAAOb,EACPc,SAAU,SAACC,GACThB,GAAgB,GAChBE,EAAoBc,EAAMC,OAAOH,gBAMvCf,GAAgB,mBAAGrB,UAAU,iBAAb,qDAGpB,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,kBACVwC,QAAS,kBAAMb,EAAUJ,IAH3B,4BASF,qBAAKvB,UAAU,UAAf,SACE,wBACEiC,KAAK,SACLjC,UAAU,oBACVwC,QAAS,WACPrB,EAASM,GACTD,EAAoB,KALxB,qCAcN,sBAAKxB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCyB,EAAYhB,QAAU,cAAC,EAAD,CAAWV,MAAO0B,WC9EpCgB,EAAgB,WAC3B,MAAiCrB,mBAAkB,IAAnD,mBAAOb,EAAP,KAAemC,EAAf,KAQA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEmB,SAbS,SAACpB,GACZQ,EAAOoC,OAAM,SAAAC,GAAI,OAAIA,EAAKnC,SAAWV,EAAMU,WAAWV,EAAMU,QAC9DiC,GAAe,SAAAG,GAAO,4BAAQA,GAAR,CAAiB9C,gBCN7C+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0667fada.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=ebc435ec&t=';\n\nexport interface Movie {\n  Poster: string,\n  Title: string,\n  Plot: string,\n  imdbID: string,\n  Response?: string,\n}\n\nexport function getMovie(title: string): Promise<Movie> {\n  return fetch(`${API_URL}${title}`)\n    .then(response => {\n      if (!response.status) {\n        throw new Error('error');\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [isMovieValid, setIsMovieValid] = useState(true);\n  const [findedMovieTitle, setFindedMovieTitle] = useState('');\n  const [findedMovie, setFindedMovie] = useState({\n    Poster: '',\n    Title: '1',\n    Plot: '',\n    imdbID: '',\n  });\n\n  const loadMovie = async (title: string) => {\n    if (!(findedMovie.Title || '').toLowerCase().includes(title.toLowerCase())) {\n      const movie = await getMovie(title);\n\n      if (movie.Response === 'False') {\n        setIsMovieValid(false);\n      } else {\n        setFindedMovie(movie);\n      }\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={findedMovieTitle}\n                onChange={(event) => {\n                  setIsMovieValid(true);\n                  setFindedMovieTitle(event.target.value);\n                }}\n              />\n            </div>\n          </label>\n\n          {!isMovieValid && <p className=\"help is-danger\">Can&apos;t find a movie with such a title</p>}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => loadMovie(findedMovieTitle)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(findedMovie);\n                setFindedMovieTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {findedMovie.imdbID && <MovieCard movie={findedMovie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, addMovieToList] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    if (movies.every(movi => movi.imdbID !== movie.imdbID) && movie.imdbID) {\n      addMovieToList(current => [...current, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}